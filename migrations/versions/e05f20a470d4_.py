"""empty message

Revision ID: e05f20a470d4
Revises: 0b7610f9fa78
Create Date: 2023-11-08 16:34:48.531063

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = 'e05f20a470d4'
down_revision = '0b7610f9fa78'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    '''op.create_table('film',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('length', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('director', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )'''
    if 'film' not in tables:
        op.create_table('film',
            sa.Column('id', sa.Integer, primary_key=True),
            sa.Column('title', sa.String),
            sa.Column('length', sa.Integer),
            sa.Column('year', sa.Integer),
            sa.Column('director', sa.String)
        )
    else:
        pass

    '''op.create_table('actor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('film_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['film_id'], ['film.id'], ),
    sa.PrimaryKeyConstraint('id')
    )'''
    if 'actor' not in tables:
        op.create_table('actor',
            sa.Column('id', sa.Integer, nullable=False),
            sa.Column('name', sa.String, nullable=True),
            sa.Column('film_id', sa.Integer, nullable=False),
            sa.ForeignKeyConstraint(['film_id'], ['film.id']),
            sa.PrimaryKeyConstraint('id')
        )
    else:
        pass  # La tabla ya existe, no hacer nada

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('actor')
    op.drop_table('film')
    # ### end Alembic commands ###
